ARG BUNDLE=lang

FROM fulviofarina/merlin-${BUNDLE}:latest AS bundle-version-git

LABEL FULVIO_FARINA=<fulviofarina@gmail.com>
USER root
#libs

ARG GIT_VERSION
RUN echo "${GIT_VERSION}"
RUN apt-get install -y libz-dev 
RUN apt-get install libssl-dev
RUN apt-get install cmake gcc
RUN apt-get install libcurl4-gnutls-dev 
RUN apt-get install libexpat1-dev 
RUN apt-get install tar
#####GIT
RUN cd /${HOME} \
&& curl -o git-${GIT_VERSION}.tar.gz https://mirrors.edge.kernel.org/pub/software/scm/git/git-${GIT_VERSION}.tar.gz
RUN tar -zxf /${HOME}/git-${GIT_VERSION}.tar.gz 
RUN cd git-${GIT_VERSION} && make prefix=/usr/local all && install && exec bash
RUN rm -rf /${HOME}/git-${GIT_VERSION}.tar.gz && rm -rf /${HOME}/git-${GIT_VERSION} \
#&& rm -rf git-2.38.1 \
#### cleanup
RUN apt-get upgrade -y && apt-get autoremove -y
###### pip git
RUN pip install jupyterlab-git && pip list

## SAVE THE ORIGINAL PROFILE

ARG REPO_FOLDER=repositories
ARG REPO=${HOME}/${REPO_FOLDER}

#RUN git clone https://github.com/mit-crpg/OpenMOC $REPO/OpenMOC/
#RUN git clone https://github.com/mit-crpg/openmc-reactor-examples $REPO/openmc-reactor-examples/ \
#&& git clone https://github.com/mit-crpg/openmc-workshop $REPO/openmc-workshop/ \
#&& git clone https://github.com/mit-crpg/benchmarks $REPO/benchmarks/ \
#&& git clone https://github.com/mit-crpg/BEAVRS $REPO/BEAVRS/ \
#&& git clone https://github.com/mit-crpg/fet-stationarity $REPO/fet-stationarity/ \
#&& git clone https://github.com/mit-crpg/WMP_Library $REPO/cloud/WMP_Library/ \
#&& git clone https://github.com/mit-crpg/vectfit $REPO/vectfit/ \
#&& git clone https://github.com/mit-crpg/TIMCAT $REPO/TIMCAT/

ENTRYPOINT [ "/bin/bash", "-l"]
